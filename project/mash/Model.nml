float sdPyramid( vec3 p, float h )
{
  float m2 = h*h + 0.25;
    
  p.xz = abs(p.xz);
  p.xz = (p.z>p.x) ? p.zx : p.xz;
  p.xz -= 0.5;

  vec3 q = vec3( p.z, h*p.y - 0.5*p.x, h*p.x + 0.5*p.y);
   
  float s = max(-q.x,0.0);
  float t = clamp( (q.y-0.5*p.z)/(m2+0.25), 0.0, 1.0 );
    
  float a = m2*(q.x+s)*(q.x+s) + q.y*q.y;
  float b = m2*(q.x+0.5*t)*(q.x+0.5*t) + (q.y-m2*t)*(q.y-m2*t);
    
  float d2 = min(q.y,-q.x*m2-q.y*0.5) > 0.0 ? 0.0 : min(a,b);
    
  return sqrt( (d2+q.z*q.z)/m2 ) * sign(max(q.z,-p.y));
}
float sdBox( vec3 p, vec3 b )
{
    vec3 d = abs(p) - b;
    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));
}
float sdCappedCylinder( vec3 p, float h, float r )
{
  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);
  return min(max(d.x,d.y),0.0) + length(max(d,0.0));
}
float sdOctahedron( vec3 p, float s )
{
  p = abs(p);
  float m = p.x+p.y+p.z-s;
  vec3 q;
       if( 3.0*p.x < m ) q = p.xyz;
  else if( 3.0*p.y < m ) q = p.yzx;
  else if( 3.0*p.z < m ) q = p.zxy;
  else return m*0.57735027;
    
  float k = clamp(0.5*(q.z-q.y+s),0.0,s); 
  return length(vec3(q.x,q.y-s+k,q.z-k)); 
}
float gap(vec2 p){
    p.y*=1.5;
    return min(0.2,max(sin(p.y*15.)-0.8,0.)+max(sin((p.x+floor(p.y*15./PI*0.5-0.25))*10.)-0.8,0.))*0.1;
}

object DE(vec3 pos) {
    object hit0=newObj(1e5,1e5,-1,-1,0);
    pos.y+=0.5;
    pos.z+=0.01;
    pos*=0.55;
    float d=1e10;
    
    float gap=abs(pos.x)<abs(pos.z)?gap(pos.xy*5+vec2(0,0.5)):gap(pos.zy*5+vec2(0,0.5));
    vec3 pos0=pos;
    pos0.xz=rot(pos0.xz,PI/4);
    d=min(d,max(sdOctahedron(pos0,0.75),-pos.y));float b=d;
    d+=gap*0.5*float(pos.y>0.025);
    float a=sdCappedCylinder(pos.xzy+vec3(0,0,-0.3),5,0.2);
    a=max(a,sdCappedCylinder(pos.xzy+vec3(0,0,0),5,0.3));
    d=max(d,-a);
    d=min(d,max(b,sdCappedCylinder(pos.xzy+vec3(0,0,-0.25),2,0.075)));
    hit0=near(hit0,vec3(3,d/0.55,1));
    return hit0;
}