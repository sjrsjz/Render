#version 430 core
layout (local_size_x=####,local_size_y=####) in;//#### means default pixel(or workspace) size
layout (rgba32f,binding=0) uniform image2D input_;
layout (rgba32f,binding=1) uniform image2D output_;
layout (rgba32f,binding=2) uniform image2D data_;
layout (binding=0) uniform sampler1D fft_;

uniform float iTime,scale;
uniform int iFrame,iOffset,iW,iH;
uniform vec4 Position2D;
ivec2 lp;
void F(float x,float y);
vec4 Load(ivec2 pos){
    return imageLoad(input_,pos);
}
void Store(ivec2 pos,vec4 data0){
    imageStore(output_,pos,data0);
}
vec4 Load(){
    return imageLoad(input_,lp);
}
void Store(vec4 data0){
    imageStore(output_,lp,data0);
}
void main(){
    lp=ivec2(gl_GlobalInvocationID.xy);
    Store(lp,Load(lp));
    F(2.0*(lp.x/float(iW)-0.5),2.0*((lp.y+iOffset*iH)/float(iW)-0.5));
}

#include "common.nml"
#define Straight
void F(float x,float y){
    #ifdef Straight
    vec4 d=texture(fft_,abs(x*0.5));
    #else
    vec4 d=texture(fft_,abs(length(vec2(x,y*0.75))*0.5));
    #endif
    d.z*=0.002;
    float strength=d.z;
    float dt0=exp(-4*(iTime-d.y));
    Store(vec4(float(abs(y)<strength*(abs(x)+0.025))*strength*4*vec3(dt0,1,1),strength*4*float(abs(y)<strength*(abs(x)+0.025))));
}