#version 430 core
layout (local_size_x=####,local_size_y=####) in;//#### means default pixel(or workspace) size
layout (rgba32f,binding=0) uniform image2D input_;
layout (rgba32f,binding=1) uniform image2D output_;
layout (rgba32f,binding=2) uniform image2D data_;
layout (binding=0) uniform sampler2D video_frame;

uniform vec4 video_size;

uniform float iTime,scale;
uniform int iFrame,iOffset,iW,iH;
uniform vec4 Position2D;
uniform vec3 RGB,RGB2;
ivec2 lp;
void F(float x,float y);
vec4 Load(ivec2 pos){
    return imageLoad(input_,pos);
}
void Store(ivec2 pos,vec4 data0){
    imageStore(output_,pos,data0);
}
vec4 Load(){
    return imageLoad(input_,lp);
}
void Store(vec4 data0){
    imageStore(output_,lp,data0);
}
void main(){
    lp=ivec2(gl_GlobalInvocationID.xy);
    Store(lp,Load(lp));
    F(2.0*(lp.x/float(iW)-0.5),2.0*((lp.y+iOffset*iH)/float(iW)-0.5));
}

#include "common.nml"


void F(float x,float y){
    float a=video_size.w/video_size.z;
    if(abs(y)>a) return;
    Store(vec4(texture(video_frame,0.5*vec2(x,y/a)+0.5).xyz,1));
}