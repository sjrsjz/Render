#version 430 core
layout (local_size_x=####,local_size_y=####) in;//#### means default pixel(or workspace) size
layout (rgba32f,binding=0) uniform image2D input_;
layout (rgba32f,binding=1) uniform image2D output_;
layout (rgba32f,binding=2) uniform image2D data_;
layout (binding=0) uniform sampler1D fft_;

uniform float iTime,scale;
uniform int iFrame,iOffset,iW,iH;
uniform vec4 Position2D;
ivec2 lp;
void F(float x,float y);
vec4 Load(ivec2 pos){
    return imageLoad(input_,pos);
}
void Store(ivec2 pos,vec4 data0){
    imageStore(output_,pos,data0);
}
vec4 Load(){
    return imageLoad(input_,lp);
}
void Store(vec4 data0){
    imageStore(output_,lp,data0);
}
void main(){
    lp=ivec2(gl_GlobalInvocationID.xy);
    Store(lp,Load(lp));
    F(2.0*(lp.x/float(iW)-0.5),2.0*((lp.y+iOffset*iH)/float(iW)-0.5));
}

#include "common.nml"
void F(float x,float y){

    float x0=abs(x);//0.5*x+0.5;
    //x0=x0>0.5?x0*0.25-0.125:0.5*x0+0.25;
    x0*=0.5;
    vec2 sample_=texture(fft_,x0).xy;
    //sample_=cMul(sample_,vec2(cos(2*iTime*3.1415926*44100/8192*x),sin(2*iTime*3.1415926*44100/8192*x)));
    float strength=dot(sample_,sample_)*0.01*x*x;//*abs(x)*0.025;
//    Store(vec4(vec3(1)*float(y>=0&&y<sample_.x*0.0125||y<=0&&-y<sample_.y*0.0125),1));
    Store(vec4(vec3(1)*float(abs(y)<strength),1));


}